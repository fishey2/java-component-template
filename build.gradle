plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "org.sonarqube" version "3.0"
    id "net.ossindex.audit" version "0.4.11"
}

group 'com.roboautomator'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // For Spring Boot Base
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.projectlombok:lombok:1.18.12')

    // For Message Queue
    implementation('org.springframework.boot:spring-boot-starter-activemq')

    // For Database
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.postgresql:postgresql')

    // For Swagger Implementation
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')

    // For Logging Implementation
    implementation('ch.qos.logback:logback-classic:1.2.3')
    implementation('ch.qos.logback.contrib:logback-json-classic:0.1.5')
    implementation('ch.qos.logback.contrib:logback-jackson:0.1.5')
    implementation('org.apache.logging.log4j:log4j-to-slf4j:2.13.3')
    implementation('org.slf4j:jul-to-slf4j:1.7.30')

    // For Health/Readiness Actuators
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // For Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testImplementation('org.mockito:mockito-core:3.3.3')
    testImplementation('io.rest-assured:rest-assured:4.2.0')
    testImplementation('io.rest-assured:json-path:4.2.0')
    testImplementation('io.rest-assured:xml-path:4.2.0')

    // Annotations
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    annotationProcessor('org.projectlombok:lombok:1.18.12')
}

apply from: 'gradle/test.gradle'
apply from: 'gradle/test-integration.gradle'
apply from: 'gradle/test-functional.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/sonar.gradle'

bootJar {
    manifest {
        attributes 'Start-Class': 'com.roboautomator.component.MainApplication'
    }
    mainClassName = 'com.roboautomator.component.MainApplication'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

configurations.all {
    exclude group:'junit', module:'junit'
    exclude group:'org.junit.vintage', module:'junit-vintage-engine'
    exclude group:'org.mockito', module:'mockito-all'
    exclude group:'org.slf4j', module:'slf4j-log4j12'
    exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
}
